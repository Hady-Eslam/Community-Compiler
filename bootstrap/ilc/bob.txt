
./test/test:     file format elf32-i386


Disassembly of section .interp:

00000154 <.interp>:
 154:	2f                   	das    
 155:	6c                   	ins    BYTE PTR es:[edi],dx
 156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 15d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

00000168 <.note.ABI-tag>:
 168:	04 00                	add    al,0x0
 16a:	00 00                	add    BYTE PTR [eax],al
 16c:	10 00                	adc    BYTE PTR [eax],al
 16e:	00 00                	add    BYTE PTR [eax],al
 170:	01 00                	add    DWORD PTR [eax],eax
 172:	00 00                	add    BYTE PTR [eax],al
 174:	47                   	inc    edi
 175:	4e                   	dec    esi
 176:	55                   	push   ebp
 177:	00 00                	add    BYTE PTR [eax],al
 179:	00 00                	add    BYTE PTR [eax],al
 17b:	00 03                	add    BYTE PTR [ebx],al
 17d:	00 00                	add    BYTE PTR [eax],al
 17f:	00 02                	add    BYTE PTR [edx],al
 181:	00 00                	add    BYTE PTR [eax],al
 183:	00 00                	add    BYTE PTR [eax],al
 185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

00000188 <.note.gnu.build-id>:
 188:	04 00                	add    al,0x0
 18a:	00 00                	add    BYTE PTR [eax],al
 18c:	14 00                	adc    al,0x0
 18e:	00 00                	add    BYTE PTR [eax],al
 190:	03 00                	add    eax,DWORD PTR [eax]
 192:	00 00                	add    BYTE PTR [eax],al
 194:	47                   	inc    edi
 195:	4e                   	dec    esi
 196:	55                   	push   ebp
 197:	00 60 d7             	add    BYTE PTR [eax-0x29],ah
 19a:	ec                   	in     al,dx
 19b:	a2 79 7d d9 42       	mov    ds:0x42d97d79,al
 1a0:	61                   	popa   
 1a1:	92                   	xchg   edx,eax
 1a2:	90                   	nop
 1a3:	95                   	xchg   ebp,eax
 1a4:	f2 69 c2 54 aa 3c cc 	repnz imul eax,edx,0xcc3caa54
 1ab:	59                   	pop    ecx

Disassembly of section .gnu.hash:

000001ac <.gnu.hash>:
 1ac:	03 00                	add    eax,DWORD PTR [eax]
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	10 00                	adc    BYTE PTR [eax],al
 1b2:	00 00                	add    BYTE PTR [eax],al
 1b4:	02 00                	add    al,BYTE PTR [eax]
 1b6:	00 00                	add    BYTE PTR [eax],al
 1b8:	06                   	push   es
 1b9:	00 00                	add    BYTE PTR [eax],al
 1bb:	00 88 00 20 01 00    	add    BYTE PTR [eax+0x12000],cl
 1c1:	e4 40                	in     al,0x40
 1c3:	09 10                	or     DWORD PTR [eax],edx
 1c5:	00 00                	add    BYTE PTR [eax],al
 1c7:	00 12                	add    BYTE PTR [edx],dl
 1c9:	00 00                	add    BYTE PTR [eax],al
 1cb:	00 15 00 00 00 42    	add    BYTE PTR ds:0x42000000,dl
 1d1:	45                   	inc    ebp
 1d2:	d5 ec                	aad    0xec
 1d4:	bb e3 92 7c ac       	mov    ebx,0xac7c92e3
 1d9:	4b                   	dec    ebx
 1da:	e3 c0                	jecxz  19c <_init-0x470>
 1dc:	b8 8d f1 0e d9       	mov    eax,0xd90ef18d
 1e1:	71 58                	jno    23b <_init-0x3d1>
 1e3:	1c eb                	sbb    al,0xeb
 1e5:	d3 ef                	shr    edi,cl
 1e7:	0e                   	push   cs

Disassembly of section .dynsym:

000001e8 <.dynsym>:
	...
 1f8:	1e                   	push   ds
 1f9:	01 00                	add    DWORD PTR [eax],eax
	...
 203:	00 22                	add    BYTE PTR [edx],ah
 205:	00 00                	add    BYTE PTR [eax],al
 207:	00 cc                	add    ah,cl
	...
 211:	00 00                	add    BYTE PTR [eax],al
 213:	00 12                	add    BYTE PTR [edx],dl
 215:	00 00                	add    BYTE PTR [eax],al
 217:	00 87 00 00 00 00    	add    BYTE PTR [edi+0x0],al
 21d:	00 00                	add    BYTE PTR [eax],al
 21f:	00 00                	add    BYTE PTR [eax],al
 221:	00 00                	add    BYTE PTR [eax],al
 223:	00 12                	add    BYTE PTR [edx],dl
 225:	00 00                	add    BYTE PTR [eax],al
 227:	00 e7                	add    bh,ah
	...
 231:	00 00                	add    BYTE PTR [eax],al
 233:	00 12                	add    BYTE PTR [edx],dl
 235:	00 00                	add    BYTE PTR [eax],al
 237:	00 2d 01 00 00 00    	add    BYTE PTR ds:0x1,ch
 23d:	00 00                	add    BYTE PTR [eax],al
 23f:	00 00                	add    BYTE PTR [eax],al
 241:	00 00                	add    BYTE PTR [eax],al
 243:	00 12                	add    BYTE PTR [edx],dl
 245:	00 00                	add    BYTE PTR [eax],al
 247:	00 7e 00             	add    BYTE PTR [esi+0x0],bh
	...
 252:	00 00                	add    BYTE PTR [eax],al
 254:	12 00                	adc    al,BYTE PTR [eax]
 256:	00 00                	add    BYTE PTR [eax],al
 258:	f8                   	clc    
	...
 261:	00 00                	add    BYTE PTR [eax],al
 263:	00 12                	add    BYTE PTR [edx],dl
 265:	00 00                	add    BYTE PTR [eax],al
 267:	00 76 00             	add    BYTE PTR [esi+0x0],dh
	...
 272:	00 00                	add    BYTE PTR [eax],al
 274:	12 00                	adc    al,BYTE PTR [eax]
 276:	00 00                	add    BYTE PTR [eax],al
 278:	bf 00 00 00 00       	mov    edi,0x0
 27d:	00 00                	add    BYTE PTR [eax],al
 27f:	00 00                	add    BYTE PTR [eax],al
 281:	00 00                	add    BYTE PTR [eax],al
 283:	00 12                	add    BYTE PTR [edx],dl
 285:	00 00                	add    BYTE PTR [eax],al
 287:	00 9b 00 00 00 00    	add    BYTE PTR [ebx+0x0],bl
 28d:	00 00                	add    BYTE PTR [eax],al
 28f:	00 00                	add    BYTE PTR [eax],al
 291:	00 00                	add    BYTE PTR [eax],al
 293:	00 12                	add    BYTE PTR [edx],dl
 295:	00 00                	add    BYTE PTR [eax],al
 297:	00 ae 00 00 00 00    	add    BYTE PTR [esi+0x0],ch
 29d:	00 00                	add    BYTE PTR [eax],al
 29f:	00 00                	add    BYTE PTR [eax],al
 2a1:	00 00                	add    BYTE PTR [eax],al
 2a3:	00 12                	add    BYTE PTR [edx],dl
 2a5:	00 00                	add    BYTE PTR [eax],al
 2a7:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
	...
 2b2:	00 00                	add    BYTE PTR [eax],al
 2b4:	20 00                	and    BYTE PTR [eax],al
 2b6:	00 00                	add    BYTE PTR [eax],al
 2b8:	d7                   	xlat   BYTE PTR ds:[ebx]
	...
 2c1:	00 00                	add    BYTE PTR [eax],al
 2c3:	00 12                	add    BYTE PTR [edx],dl
 2c5:	00 00                	add    BYTE PTR [eax],al
 2c7:	00 28                	add    BYTE PTR [eax],ch
	...
 2d1:	00 00                	add    BYTE PTR [eax],al
 2d3:	00 20                	add    BYTE PTR [eax],ah
 2d5:	00 00                	add    BYTE PTR [eax],al
 2d7:	00 37                	add    BYTE PTR [edi],dh
	...
 2e1:	00 00                	add    BYTE PTR [eax],al
 2e3:	00 20                	add    BYTE PTR [eax],ah
 2e5:	00 00                	add    BYTE PTR [eax],al
 2e7:	00 3f                	add    BYTE PTR [edi],bh
 2e9:	01 00                	add    DWORD PTR [eax],eax
 2eb:	00 49 20             	add    BYTE PTR [ecx+0x20],cl
 2ee:	00 00                	add    BYTE PTR [eax],al
 2f0:	00 00                	add    BYTE PTR [eax],al
 2f2:	00 00                	add    BYTE PTR [eax],al
 2f4:	10 00                	adc    BYTE PTR [eax],al
 2f6:	18 00                	sbb    BYTE PTR [eax],al
 2f8:	52                   	push   edx
 2f9:	01 00                	add    DWORD PTR [eax],eax
 2fb:	00 4c 20 00          	add    BYTE PTR [eax+eiz*1+0x0],cl
 2ff:	00 00                	add    BYTE PTR [eax],al
 301:	00 00                	add    BYTE PTR [eax],al
 303:	00 10                	add    BYTE PTR [eax],dl
 305:	00 19                	add    BYTE PTR [ecx],bl
 307:	00 0f                	add    BYTE PTR [edi],cl
 309:	01 00                	add    DWORD PTR [eax],eax
 30b:	00 8c 0a 00 00 04 00 	add    BYTE PTR [edx+ecx*1+0x40000],cl
 312:	00 00                	add    BYTE PTR [eax],al
 314:	11 00                	adc    DWORD PTR [eax],eax
 316:	10 00                	adc    BYTE PTR [eax],al
 318:	51                   	push   ecx
 319:	00 00                	add    BYTE PTR [eax],al
 31b:	00 0c 06             	add    BYTE PTR [esi+eax*1],cl
 31e:	00 00                	add    BYTE PTR [eax],al
 320:	00 00                	add    BYTE PTR [eax],al
 322:	00 00                	add    BYTE PTR [eax],al
 324:	12 00                	adc    al,BYTE PTR [eax]
 326:	0b 00                	or     eax,DWORD PTR [eax]
 328:	46                   	inc    esi
 329:	01 00                	add    DWORD PTR [eax],eax
 32b:	00 49 20             	add    BYTE PTR [ecx+0x20],cl
 32e:	00 00                	add    BYTE PTR [eax],al
 330:	00 00                	add    BYTE PTR [eax],al
 332:	00 00                	add    BYTE PTR [eax],al
 334:	10 00                	adc    BYTE PTR [eax],al
 336:	19 00                	sbb    DWORD PTR [eax],eax
 338:	57                   	push   edi
 339:	00 00                	add    BYTE PTR [eax],al
 33b:	00 74 0a 00          	add    BYTE PTR [edx+ecx*1+0x0],dh
 33f:	00 00                	add    BYTE PTR [eax],al
 341:	00 00                	add    BYTE PTR [eax],al
 343:	00 12                	add    BYTE PTR [edx],dl
 345:	00 0f                	add    BYTE PTR [edi],cl
	...

Disassembly of section .dynstr:

00000348 <.dynstr>:
 348:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 34c:	47                   	inc    edi
 34d:	4c                   	dec    esp
 34e:	2e 73 6f             	cs jae 3c0 <_init-0x24c>
 351:	2e 31 00             	xor    DWORD PTR cs:[eax],eax
 354:	5f                   	pop    edi
 355:	49                   	dec    ecx
 356:	54                   	push   esp
 357:	4d                   	dec    ebp
 358:	5f                   	pop    edi
 359:	64 65 72 65          	fs gs jb 3c2 <_init-0x24a>
 35d:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 364:	4d 
 365:	43                   	inc    ebx
 366:	6c                   	ins    BYTE PTR es:[edi],dx
 367:	6f                   	outs   dx,DWORD PTR ds:[esi]
 368:	6e                   	outs   dx,BYTE PTR ds:[esi]
 369:	65 54                	gs push esp
 36b:	61                   	popa   
 36c:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 370:	5f                   	pop    edi
 371:	5f                   	pop    edi
 372:	67 6d                	ins    DWORD PTR es:[di],dx
 374:	6f                   	outs   dx,DWORD PTR ds:[esi]
 375:	6e                   	outs   dx,BYTE PTR ds:[esi]
 376:	5f                   	pop    edi
 377:	73 74                	jae    3ed <_init-0x21f>
 379:	61                   	popa   
 37a:	72 74                	jb     3f0 <_init-0x21c>
 37c:	5f                   	pop    edi
 37d:	5f                   	pop    edi
 37e:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 381:	54                   	push   esp
 382:	4d                   	dec    ebp
 383:	5f                   	pop    edi
 384:	72 65                	jb     3eb <_init-0x221>
 386:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 38d:	4d 
 38e:	43                   	inc    ebx
 38f:	6c                   	ins    BYTE PTR es:[edi],dx
 390:	6f                   	outs   dx,DWORD PTR ds:[esi]
 391:	6e                   	outs   dx,BYTE PTR ds:[esi]
 392:	65 54                	gs push esp
 394:	61                   	popa   
 395:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 399:	5f                   	pop    edi
 39a:	69 6e 69 74 00 5f 66 	imul   ebp,DWORD PTR [esi+0x69],0x665f0074
 3a1:	69 6e 69 00 6c 69 62 	imul   ebp,DWORD PTR [esi+0x69],0x62696c00
 3a8:	47                   	inc    edi
 3a9:	4c                   	dec    esp
 3aa:	55                   	push   ebp
 3ab:	2e 73 6f             	cs jae 41d <_init-0x1ef>
 3ae:	2e 31 00             	xor    DWORD PTR cs:[eax],eax
 3b1:	6c                   	ins    BYTE PTR es:[edi],dx
 3b2:	69 62 67 6c 75 74 2e 	imul   esp,DWORD PTR [edx+0x67],0x2e74756c
 3b9:	73 6f                	jae    42a <_init-0x1e2>
 3bb:	2e 33 00             	xor    eax,DWORD PTR cs:[eax]
 3be:	67 6c                	ins    BYTE PTR es:[di],dx
 3c0:	46                   	inc    esi
 3c1:	6c                   	ins    BYTE PTR es:[edi],dx
 3c2:	75 73                	jne    437 <_init-0x1d5>
 3c4:	68 00 67 6c 75       	push   0x756c6700
 3c9:	74 49                	je     414 <_init-0x1f8>
 3cb:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3cc:	69 74 00 67 6c 75 74 	imul   esi,DWORD PTR [eax+eax*1+0x67],0x4974756c
 3d3:	49 
 3d4:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3d5:	69 74 44 69 73 70 6c 	imul   esi,DWORD PTR [esp+eax*2+0x69],0x616c7073
 3dc:	61 
 3dd:	79 4d                	jns    42c <_init-0x1e0>
 3df:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3e0:	64 65 00 67 6c       	fs add BYTE PTR gs:[edi+0x6c],ah
 3e5:	75 74                	jne    45b <_init-0x1b1>
 3e7:	49                   	dec    ecx
 3e8:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3e9:	69 74 57 69 6e 64 6f 	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
 3f0:	77 
 3f1:	53                   	push   ebx
 3f2:	69 7a 65 00 67 6c 75 	imul   edi,DWORD PTR [edx+0x65],0x756c6700
 3f9:	74 43                	je     43e <_init-0x1ce>
 3fb:	72 65                	jb     462 <_init-0x1aa>
 3fd:	61                   	popa   
 3fe:	74 65                	je     465 <_init-0x1a7>
 400:	57                   	push   edi
 401:	69 6e 64 6f 77 00 67 	imul   ebp,DWORD PTR [esi+0x64],0x6700776f
 408:	6c                   	ins    BYTE PTR es:[edi],dx
 409:	43                   	inc    ebx
 40a:	6c                   	ins    BYTE PTR es:[edi],dx
 40b:	65 61                	gs popa 
 40d:	72 43                	jb     452 <_init-0x1ba>
 40f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 410:	6c                   	ins    BYTE PTR es:[edi],dx
 411:	6f                   	outs   dx,DWORD PTR ds:[esi]
 412:	72 00                	jb     414 <_init-0x1f8>
 414:	67 6c                	ins    BYTE PTR es:[di],dx
 416:	75 4f                	jne    467 <_init-0x1a5>
 418:	72 74                	jb     48e <_init-0x17e>
 41a:	68 6f 32 44 00       	push   0x44326f
 41f:	67 6c                	ins    BYTE PTR es:[di],dx
 421:	75 74                	jne    497 <_init-0x175>
 423:	44                   	inc    esp
 424:	69 73 70 6c 61 79 46 	imul   esi,DWORD PTR [ebx+0x70],0x4679616c
 42b:	75 6e                	jne    49b <_init-0x171>
 42d:	63 00                	arpl   WORD PTR [eax],ax
 42f:	67 6c                	ins    BYTE PTR es:[di],dx
 431:	75 74                	jne    4a7 <_init-0x165>
 433:	4b                   	dec    ebx
 434:	65 79 62             	gs jns 499 <_init-0x173>
 437:	6f                   	outs   dx,DWORD PTR ds:[esi]
 438:	61                   	popa   
 439:	72 64                	jb     49f <_init-0x16d>
 43b:	46                   	inc    esi
 43c:	75 6e                	jne    4ac <_init-0x160>
 43e:	63 00                	arpl   WORD PTR [eax],ax
 440:	67 6c                	ins    BYTE PTR es:[di],dx
 442:	75 74                	jne    4b8 <_init-0x154>
 444:	4d                   	dec    ebp
 445:	61                   	popa   
 446:	69 6e 4c 6f 6f 70 00 	imul   ebp,DWORD PTR [esi+0x4c],0x706f6f
 44d:	6c                   	ins    BYTE PTR es:[edi],dx
 44e:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [edx+0x63],0x2e6f732e
 455:	36 00 5f 49          	add    BYTE PTR ss:[edi+0x49],bl
 459:	4f                   	dec    edi
 45a:	5f                   	pop    edi
 45b:	73 74                	jae    4d1 <_init-0x13b>
 45d:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 464:	64 
 465:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 468:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 46b:	5f                   	pop    edi
 46c:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 472:	7a 65                	jp     4d9 <_init-0x133>
 474:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 477:	6c                   	ins    BYTE PTR es:[edi],dx
 478:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 47f:	72 74                	jb     4f5 <_init-0x117>
 481:	5f                   	pop    edi
 482:	6d                   	ins    DWORD PTR es:[edi],dx
 483:	61                   	popa   
 484:	69 6e 00 5f 65 64 61 	imul   ebp,DWORD PTR [esi+0x0],0x6164655f
 48b:	74 61                	je     4ee <_init-0x11e>
 48d:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 490:	62 73 73             	bound  esi,QWORD PTR [ebx+0x73]
 493:	5f                   	pop    edi
 494:	73 74                	jae    50a <_init-0x102>
 496:	61                   	popa   
 497:	72 74                	jb     50d <_init-0xff>
 499:	00 5f 65             	add    BYTE PTR [edi+0x65],bl
 49c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 49d:	64 00 47 4c          	add    BYTE PTR fs:[edi+0x4c],al
 4a1:	49                   	dec    ecx
 4a2:	42                   	inc    edx
 4a3:	43                   	inc    ebx
 4a4:	5f                   	pop    edi
 4a5:	32 2e                	xor    ch,BYTE PTR [esi]
 4a7:	30 00                	xor    BYTE PTR [eax],al
 4a9:	47                   	inc    edi
 4aa:	4c                   	dec    esp
 4ab:	49                   	dec    ecx
 4ac:	42                   	inc    edx
 4ad:	43                   	inc    ebx
 4ae:	5f                   	pop    edi
 4af:	32 2e                	xor    ch,BYTE PTR [esi]
 4b1:	31 2e                	xor    DWORD PTR [esi],ebp
 4b3:	33 00                	xor    eax,DWORD PTR [eax]

Disassembly of section .gnu.version:

000004b6 <.gnu.version>:
 4b6:	00 00                	add    BYTE PTR [eax],al
 4b8:	02 00                	add    al,BYTE PTR [eax]
 4ba:	00 00                	add    BYTE PTR [eax],al
 4bc:	00 00                	add    BYTE PTR [eax],al
 4be:	00 00                	add    BYTE PTR [eax],al
 4c0:	03 00                	add    eax,DWORD PTR [eax]
	...
 4d6:	01 00                	add    DWORD PTR [eax],eax
 4d8:	01 00                	add    DWORD PTR [eax],eax
 4da:	01 00                	add    DWORD PTR [eax],eax
 4dc:	01 00                	add    DWORD PTR [eax],eax
 4de:	01 00                	add    DWORD PTR [eax],eax
 4e0:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

000004e4 <.gnu.version_r>:
 4e4:	01 00                	add    DWORD PTR [eax],eax
 4e6:	02 00                	add    al,BYTE PTR [eax]
 4e8:	05 01 00 00 10       	add    eax,0x10000001
 4ed:	00 00                	add    BYTE PTR [eax],al
 4ef:	00 00                	add    BYTE PTR [eax],al
 4f1:	00 00                	add    BYTE PTR [eax],al
 4f3:	00 10                	add    BYTE PTR [eax],dl
 4f5:	69 69 0d 00 00 03 00 	imul   ebp,DWORD PTR [ecx+0xd],0x30000
 4fc:	57                   	push   edi
 4fd:	01 00                	add    DWORD PTR [eax],eax
 4ff:	00 10                	add    BYTE PTR [eax],dl
 501:	00 00                	add    BYTE PTR [eax],al
 503:	00 73 1f             	add    BYTE PTR [ebx+0x1f],dh
 506:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [ecx],0x20000
 50c:	61                   	popa   
 50d:	01 00                	add    DWORD PTR [eax],eax
 50f:	00 00                	add    BYTE PTR [eax],al
 511:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

00000514 <.rel.dyn>:
 514:	87 09                	xchg   DWORD PTR [ecx],ecx
 516:	00 00                	add    BYTE PTR [eax],al
 518:	08 00                	or     BYTE PTR [eax],al
 51a:	00 00                	add    BYTE PTR [eax],al
 51c:	c3                   	ret    
 51d:	09 00                	or     DWORD PTR [eax],eax
 51f:	00 08                	add    BYTE PTR [eax],cl
 521:	00 00                	add    BYTE PTR [eax],al
 523:	00 d2                	add    dl,dl
 525:	09 00                	or     DWORD PTR [eax],eax
 527:	00 08                	add    BYTE PTR [eax],cl
 529:	00 00                	add    BYTE PTR [eax],al
 52b:	00 d4                	add    ah,dl
 52d:	1e                   	push   ds
 52e:	00 00                	add    BYTE PTR [eax],al
 530:	08 00                	or     BYTE PTR [eax],al
 532:	00 00                	add    BYTE PTR [eax],al
 534:	d8 1e                	fcomp  DWORD PTR [esi]
 536:	00 00                	add    BYTE PTR [eax],al
 538:	08 00                	or     BYTE PTR [eax],al
 53a:	00 00                	add    BYTE PTR [eax],al
 53c:	f0 1f                	lock pop ds
 53e:	00 00                	add    BYTE PTR [eax],al
 540:	08 00                	or     BYTE PTR [eax],al
 542:	00 00                	add    BYTE PTR [eax],al
 544:	3c 20                	cmp    al,0x20
 546:	00 00                	add    BYTE PTR [eax],al
 548:	08 00                	or     BYTE PTR [eax],al
 54a:	00 00                	add    BYTE PTR [eax],al
 54c:	6b 09 00             	imul   ecx,DWORD PTR [ecx],0x0
 54f:	00 02                	add    BYTE PTR [edx],al
 551:	03 00                	add    eax,DWORD PTR [eax]
 553:	00 7f 09             	add    BYTE PTR [edi+0x9],bh
 556:	00 00                	add    BYTE PTR [eax],al
 558:	02 0a                	add    cl,BYTE PTR [edx]
 55a:	00 00                	add    BYTE PTR [eax],al
 55c:	8f 09                	(bad)  
 55e:	00 00                	add    BYTE PTR [eax],al
 560:	02 0b                	add    cl,BYTE PTR [ebx]
 562:	00 00                	add    BYTE PTR [eax],al
 564:	a3 09 00 00 02       	mov    ds:0x2000009,eax
 569:	09 00                	or     DWORD PTR [eax],eax
 56b:	00 bb 09 00 00 02    	add    BYTE PTR [ebx+0x2000009],bh
 571:	02 00                	add    al,BYTE PTR [eax]
 573:	00 ca                	add    dl,cl
 575:	09 00                	or     DWORD PTR [eax],eax
 577:	00 02                	add    BYTE PTR [edx],al
 579:	0d 00 00 d9 09       	or     eax,0x9d90000
 57e:	00 00                	add    BYTE PTR [eax],al
 580:	02 04 00             	add    al,BYTE PTR [eax+eax*1]
 583:	00 e3                	add    bl,ah
 585:	09 00                	or     DWORD PTR [eax],eax
 587:	00 02                	add    BYTE PTR [edx],al
 589:	07                   	pop    es
 58a:	00 00                	add    BYTE PTR [eax],al
 58c:	f5                   	cmc    
 58d:	09 00                	or     DWORD PTR [eax],eax
 58f:	00 02                	add    BYTE PTR [edx],al
 591:	08 00                	or     BYTE PTR [eax],al
 593:	00 ec                	add    ah,ch
 595:	1f                   	pop    ds
 596:	00 00                	add    BYTE PTR [eax],al
 598:	06                   	push   es
 599:	01 00                	add    DWORD PTR [eax],eax
 59b:	00 f4                	add    ah,dh
 59d:	1f                   	pop    ds
 59e:	00 00                	add    BYTE PTR [eax],al
 5a0:	06                   	push   es
 5a1:	0c 00                	or     al,0x0
 5a3:	00 f8                	add    al,bh
 5a5:	1f                   	pop    ds
 5a6:	00 00                	add    BYTE PTR [eax],al
 5a8:	06                   	push   es
 5a9:	0e                   	push   cs
 5aa:	00 00                	add    BYTE PTR [eax],al
 5ac:	fc                   	cld    
 5ad:	1f                   	pop    ds
 5ae:	00 00                	add    BYTE PTR [eax],al
 5b0:	06                   	push   es
 5b1:	0f 00 00             	sldt   WORD PTR [eax]

Disassembly of section .rel.plt:

000005b4 <.rel.plt>:
 5b4:	0c 20                	or     al,0x20
 5b6:	00 00                	add    BYTE PTR [eax],al
 5b8:	07                   	pop    es
 5b9:	02 00                	add    al,BYTE PTR [eax]
 5bb:	00 10                	add    BYTE PTR [eax],dl
 5bd:	20 00                	and    BYTE PTR [eax],al
 5bf:	00 07                	add    BYTE PTR [edi],al
 5c1:	03 00                	add    eax,DWORD PTR [eax]
 5c3:	00 14 20             	add    BYTE PTR [eax+eiz*1],dl
 5c6:	00 00                	add    BYTE PTR [eax],al
 5c8:	07                   	pop    es
 5c9:	04 00                	add    al,0x0
 5cb:	00 18                	add    BYTE PTR [eax],bl
 5cd:	20 00                	and    BYTE PTR [eax],al
 5cf:	00 07                	add    BYTE PTR [edi],al
 5d1:	05 00 00 1c 20       	add    eax,0x201c0000
 5d6:	00 00                	add    BYTE PTR [eax],al
 5d8:	07                   	pop    es
 5d9:	06                   	push   es
 5da:	00 00                	add    BYTE PTR [eax],al
 5dc:	20 20                	and    BYTE PTR [eax],ah
 5de:	00 00                	add    BYTE PTR [eax],al
 5e0:	07                   	pop    es
 5e1:	07                   	pop    es
 5e2:	00 00                	add    BYTE PTR [eax],al
 5e4:	24 20                	and    al,0x20
 5e6:	00 00                	add    BYTE PTR [eax],al
 5e8:	07                   	pop    es
 5e9:	08 00                	or     BYTE PTR [eax],al
 5eb:	00 28                	add    BYTE PTR [eax],ch
 5ed:	20 00                	and    BYTE PTR [eax],al
 5ef:	00 07                	add    BYTE PTR [edi],al
 5f1:	09 00                	or     DWORD PTR [eax],eax
 5f3:	00 2c 20             	add    BYTE PTR [eax+eiz*1],ch
 5f6:	00 00                	add    BYTE PTR [eax],al
 5f8:	07                   	pop    es
 5f9:	0a 00                	or     al,BYTE PTR [eax]
 5fb:	00 30                	add    BYTE PTR [eax],dh
 5fd:	20 00                	and    BYTE PTR [eax],al
 5ff:	00 07                	add    BYTE PTR [edi],al
 601:	0b 00                	or     eax,DWORD PTR [eax]
 603:	00 34 20             	add    BYTE PTR [eax+eiz*1],dh
 606:	00 00                	add    BYTE PTR [eax],al
 608:	07                   	pop    es
 609:	0d                   	.byte 0xd
	...

Disassembly of section .init:

0000060c <_init>:
 60c:	53                   	push   ebx
 60d:	83 ec 08             	sub    esp,0x8
 610:	e8 2b 01 00 00       	call   740 <__x86.get_pc_thunk.bx>
 615:	81 c3 eb 19 00 00    	add    ebx,0x19eb
 61b:	8b 83 f8 ff ff ff    	mov    eax,DWORD PTR [ebx-0x8]
 621:	85 c0                	test   eax,eax
 623:	74 05                	je     62a <_init+0x1e>
 625:	e8 c6 00 00 00       	call   6f0 <__gmon_start__@plt>
 62a:	83 c4 08             	add    esp,0x8
 62d:	5b                   	pop    ebx
 62e:	c3                   	ret    

Disassembly of section .plt:

00000630 <.plt>:
 630:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 636:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 63c:	00 00                	add    BYTE PTR [eax],al
	...

00000640 <gluOrtho2D@plt>:
 640:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 646:	68 00 00 00 00       	push   0x0
 64b:	e9 e0 ff ff ff       	jmp    630 <.plt>

00000650 <glutInitDisplayMode@plt>:
 650:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
 656:	68 08 00 00 00       	push   0x8
 65b:	e9 d0 ff ff ff       	jmp    630 <.plt>

00000660 <glutKeyboardFunc@plt>:
 660:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 666:	68 10 00 00 00       	push   0x10
 66b:	e9 c0 ff ff ff       	jmp    630 <.plt>

00000670 <__libc_start_main@plt>:
 670:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
 676:	68 18 00 00 00       	push   0x18
 67b:	e9 b0 ff ff ff       	jmp    630 <.plt>

00000680 <glutInit@plt>:
 680:	ff a3 1c 00 00 00    	jmp    DWORD PTR [ebx+0x1c]
 686:	68 20 00 00 00       	push   0x20
 68b:	e9 a0 ff ff ff       	jmp    630 <.plt>

00000690 <glutMainLoop@plt>:
 690:	ff a3 20 00 00 00    	jmp    DWORD PTR [ebx+0x20]
 696:	68 28 00 00 00       	push   0x28
 69b:	e9 90 ff ff ff       	jmp    630 <.plt>

000006a0 <glFlush@plt>:
 6a0:	ff a3 24 00 00 00    	jmp    DWORD PTR [ebx+0x24]
 6a6:	68 30 00 00 00       	push   0x30
 6ab:	e9 80 ff ff ff       	jmp    630 <.plt>

000006b0 <glClearColor@plt>:
 6b0:	ff a3 28 00 00 00    	jmp    DWORD PTR [ebx+0x28]
 6b6:	68 38 00 00 00       	push   0x38
 6bb:	e9 70 ff ff ff       	jmp    630 <.plt>

000006c0 <glutInitWindowSize@plt>:
 6c0:	ff a3 2c 00 00 00    	jmp    DWORD PTR [ebx+0x2c]
 6c6:	68 40 00 00 00       	push   0x40
 6cb:	e9 60 ff ff ff       	jmp    630 <.plt>

000006d0 <glutCreateWindow@plt>:
 6d0:	ff a3 30 00 00 00    	jmp    DWORD PTR [ebx+0x30]
 6d6:	68 48 00 00 00       	push   0x48
 6db:	e9 50 ff ff ff       	jmp    630 <.plt>

000006e0 <glutDisplayFunc@plt>:
 6e0:	ff a3 34 00 00 00    	jmp    DWORD PTR [ebx+0x34]
 6e6:	68 50 00 00 00       	push   0x50
 6eb:	e9 40 ff ff ff       	jmp    630 <.plt>

Disassembly of section .plt.got:

000006f0 <__gmon_start__@plt>:
 6f0:	ff a3 f8 ff ff ff    	jmp    DWORD PTR [ebx-0x8]
 6f6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000700 <_start>:
 700:	31 ed                	xor    ebp,ebp
 702:	5e                   	pop    esi
 703:	89 e1                	mov    ecx,esp
 705:	83 e4 f0             	and    esp,0xfffffff0
 708:	50                   	push   eax
 709:	54                   	push   esp
 70a:	52                   	push   edx
 70b:	e8 22 00 00 00       	call   732 <_start+0x32>
 710:	81 c3 f0 18 00 00    	add    ebx,0x18f0
 716:	8d 83 70 ea ff ff    	lea    eax,[ebx-0x1590]
 71c:	50                   	push   eax
 71d:	8d 83 10 ea ff ff    	lea    eax,[ebx-0x15f0]
 723:	50                   	push   eax
 724:	51                   	push   ecx
 725:	56                   	push   esi
 726:	ff b3 f0 ff ff ff    	push   DWORD PTR [ebx-0x10]
 72c:	e8 3f ff ff ff       	call   670 <__libc_start_main@plt>
 731:	f4                   	hlt    
 732:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 735:	c3                   	ret    
 736:	66 90                	xchg   ax,ax
 738:	66 90                	xchg   ax,ax
 73a:	66 90                	xchg   ax,ax
 73c:	66 90                	xchg   ax,ax
 73e:	66 90                	xchg   ax,ax

00000740 <__x86.get_pc_thunk.bx>:
 740:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 743:	c3                   	ret    
 744:	66 90                	xchg   ax,ax
 746:	66 90                	xchg   ax,ax
 748:	66 90                	xchg   ax,ax
 74a:	66 90                	xchg   ax,ax
 74c:	66 90                	xchg   ax,ax
 74e:	66 90                	xchg   ax,ax

00000750 <deregister_tm_clones>:
 750:	e8 e4 00 00 00       	call   839 <__x86.get_pc_thunk.dx>
 755:	81 c2 ab 18 00 00    	add    edx,0x18ab
 75b:	8d 8a 4c 00 00 00    	lea    ecx,[edx+0x4c]
 761:	8d 82 4c 00 00 00    	lea    eax,[edx+0x4c]
 767:	39 c8                	cmp    eax,ecx
 769:	74 1d                	je     788 <deregister_tm_clones+0x38>
 76b:	8b 82 f4 ff ff ff    	mov    eax,DWORD PTR [edx-0xc]
 771:	85 c0                	test   eax,eax
 773:	74 13                	je     788 <deregister_tm_clones+0x38>
 775:	55                   	push   ebp
 776:	89 e5                	mov    ebp,esp
 778:	83 ec 14             	sub    esp,0x14
 77b:	51                   	push   ecx
 77c:	ff d0                	call   eax
 77e:	83 c4 10             	add    esp,0x10
 781:	c9                   	leave  
 782:	c3                   	ret    
 783:	90                   	nop
 784:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 788:	f3 c3                	repz ret 
 78a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00000790 <register_tm_clones>:
 790:	e8 a4 00 00 00       	call   839 <__x86.get_pc_thunk.dx>
 795:	81 c2 6b 18 00 00    	add    edx,0x186b
 79b:	55                   	push   ebp
 79c:	8d 8a 4c 00 00 00    	lea    ecx,[edx+0x4c]
 7a2:	8d 82 4c 00 00 00    	lea    eax,[edx+0x4c]
 7a8:	29 c8                	sub    eax,ecx
 7aa:	89 e5                	mov    ebp,esp
 7ac:	53                   	push   ebx
 7ad:	c1 f8 02             	sar    eax,0x2
 7b0:	89 c3                	mov    ebx,eax
 7b2:	83 ec 04             	sub    esp,0x4
 7b5:	c1 eb 1f             	shr    ebx,0x1f
 7b8:	01 d8                	add    eax,ebx
 7ba:	d1 f8                	sar    eax,1
 7bc:	74 14                	je     7d2 <register_tm_clones+0x42>
 7be:	8b 92 fc ff ff ff    	mov    edx,DWORD PTR [edx-0x4]
 7c4:	85 d2                	test   edx,edx
 7c6:	74 0a                	je     7d2 <register_tm_clones+0x42>
 7c8:	83 ec 08             	sub    esp,0x8
 7cb:	50                   	push   eax
 7cc:	51                   	push   ecx
 7cd:	ff d2                	call   edx
 7cf:	83 c4 10             	add    esp,0x10
 7d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 7d5:	c9                   	leave  
 7d6:	c3                   	ret    
 7d7:	89 f6                	mov    esi,esi
 7d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000007e0 <__do_global_dtors_aux>:
 7e0:	55                   	push   ebp
 7e1:	89 e5                	mov    ebp,esp
 7e3:	53                   	push   ebx
 7e4:	e8 57 ff ff ff       	call   740 <__x86.get_pc_thunk.bx>
 7e9:	81 c3 17 18 00 00    	add    ebx,0x1817
 7ef:	83 ec 04             	sub    esp,0x4
 7f2:	80 bb 49 00 00 00 00 	cmp    BYTE PTR [ebx+0x49],0x0
 7f9:	75 28                	jne    823 <__do_global_dtors_aux+0x43>
 7fb:	8b 83 ec ff ff ff    	mov    eax,DWORD PTR [ebx-0x14]
 801:	85 c0                	test   eax,eax
 803:	74 12                	je     817 <__do_global_dtors_aux+0x37>
 805:	83 ec 0c             	sub    esp,0xc
 808:	ff b3 3c 00 00 00    	push   DWORD PTR [ebx+0x3c]
 80e:	ff 93 ec ff ff ff    	call   DWORD PTR [ebx-0x14]
 814:	83 c4 10             	add    esp,0x10
 817:	e8 34 ff ff ff       	call   750 <deregister_tm_clones>
 81c:	c6 83 49 00 00 00 01 	mov    BYTE PTR [ebx+0x49],0x1
 823:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 826:	c9                   	leave  
 827:	c3                   	ret    
 828:	90                   	nop
 829:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00000830 <frame_dummy>:
 830:	55                   	push   ebp
 831:	89 e5                	mov    ebp,esp
 833:	5d                   	pop    ebp
 834:	e9 57 ff ff ff       	jmp    790 <register_tm_clones>

00000839 <__x86.get_pc_thunk.dx>:
 839:	8b 14 24             	mov    edx,DWORD PTR [esp]
 83c:	c3                   	ret    

0000083d <display1>:
 83d:	55                   	push   ebp
 83e:	89 e5                	mov    ebp,esp
 840:	53                   	push   ebx
 841:	83 ec 04             	sub    esp,0x4
 844:	e8 10 01 00 00       	call   959 <__x86.get_pc_thunk.ax>
 849:	05 b7 17 00 00       	add    eax,0x17b7
 84e:	89 c3                	mov    ebx,eax
 850:	e8 4b fe ff ff       	call   6a0 <glFlush@plt>
 855:	90                   	nop
 856:	83 c4 04             	add    esp,0x4
 859:	5b                   	pop    ebx
 85a:	5d                   	pop    ebp
 85b:	c3                   	ret    

0000085c <main>:
 85c:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 860:	83 e4 f0             	and    esp,0xfffffff0
 863:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 866:	55                   	push   ebp
 867:	89 e5                	mov    ebp,esp
 869:	53                   	push   ebx
 86a:	51                   	push   ecx
 86b:	83 ec 10             	sub    esp,0x10
 86e:	e8 cd fe ff ff       	call   740 <__x86.get_pc_thunk.bx>
 873:	81 c3 8d 17 00 00    	add    ebx,0x178d
 879:	89 c8                	mov    eax,ecx
 87b:	83 ec 08             	sub    esp,0x8
 87e:	ff 70 04             	push   DWORD PTR [eax+0x4]
 881:	50                   	push   eax
 882:	e8 f9 fd ff ff       	call   680 <glutInit@plt>
 887:	83 c4 10             	add    esp,0x10
 88a:	83 ec 0c             	sub    esp,0xc
 88d:	6a 00                	push   0x0
 88f:	e8 bc fd ff ff       	call   650 <glutInitDisplayMode@plt>
 894:	83 c4 10             	add    esp,0x10
 897:	83 ec 08             	sub    esp,0x8
 89a:	68 f4 01 00 00       	push   0x1f4
 89f:	68 90 01 00 00       	push   0x190
 8a4:	e8 17 fe ff ff       	call   6c0 <glutInitWindowSize@plt>
 8a9:	83 c4 10             	add    esp,0x10
 8ac:	83 ec 0c             	sub    esp,0xc
 8af:	8d 83 90 ea ff ff    	lea    eax,[ebx-0x1570]
 8b5:	50                   	push   eax
 8b6:	e8 15 fe ff ff       	call   6d0 <glutCreateWindow@plt>
 8bb:	83 c4 10             	add    esp,0x10
 8be:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8c1:	d9 ee                	fldz   
 8c3:	8d 64 24 fc          	lea    esp,[esp-0x4]
 8c7:	d9 1c 24             	fstp   DWORD PTR [esp]
 8ca:	d9 ee                	fldz   
 8cc:	8d 64 24 fc          	lea    esp,[esp-0x4]
 8d0:	d9 1c 24             	fstp   DWORD PTR [esp]
 8d3:	d9 ee                	fldz   
 8d5:	8d 64 24 fc          	lea    esp,[esp-0x4]
 8d9:	d9 1c 24             	fstp   DWORD PTR [esp]
 8dc:	d9 ee                	fldz   
 8de:	8d 64 24 fc          	lea    esp,[esp-0x4]
 8e2:	d9 1c 24             	fstp   DWORD PTR [esp]
 8e5:	e8 c6 fd ff ff       	call   6b0 <glClearColor@plt>
 8ea:	83 c4 10             	add    esp,0x10
 8ed:	dd 83 a0 ea ff ff    	fld    QWORD PTR [ebx-0x1560]
 8f3:	8d 64 24 f8          	lea    esp,[esp-0x8]
 8f7:	dd 1c 24             	fstp   QWORD PTR [esp]
 8fa:	d9 ee                	fldz   
 8fc:	8d 64 24 f8          	lea    esp,[esp-0x8]
 900:	dd 1c 24             	fstp   QWORD PTR [esp]
 903:	dd 83 a8 ea ff ff    	fld    QWORD PTR [ebx-0x1558]
 909:	8d 64 24 f8          	lea    esp,[esp-0x8]
 90d:	dd 1c 24             	fstp   QWORD PTR [esp]
 910:	d9 ee                	fldz   
 912:	8d 64 24 f8          	lea    esp,[esp-0x8]
 916:	dd 1c 24             	fstp   QWORD PTR [esp]
 919:	e8 22 fd ff ff       	call   640 <gluOrtho2D@plt>
 91e:	83 c4 20             	add    esp,0x20
 921:	83 ec 0c             	sub    esp,0xc
 924:	8d 83 ec e9 ff ff    	lea    eax,[ebx-0x1614]
 92a:	50                   	push   eax
 92b:	e8 b0 fd ff ff       	call   6e0 <glutDisplayFunc@plt>
 930:	83 c4 10             	add    esp,0x10
 933:	83 ec 0c             	sub    esp,0xc
 936:	8d 83 fe e9 ff ff    	lea    eax,[ebx-0x1602]
 93c:	50                   	push   eax
 93d:	e8 1e fd ff ff       	call   660 <glutKeyboardFunc@plt>
 942:	83 c4 10             	add    esp,0x10
 945:	e8 46 fd ff ff       	call   690 <glutMainLoop@plt>
 94a:	b8 00 00 00 00       	mov    eax,0x0
 94f:	8d 65 f8             	lea    esp,[ebp-0x8]
 952:	59                   	pop    ecx
 953:	5b                   	pop    ebx
 954:	5d                   	pop    ebp
 955:	8d 61 fc             	lea    esp,[ecx-0x4]
 958:	c3                   	ret    

00000959 <__x86.get_pc_thunk.ax>:
 959:	8b 04 24             	mov    eax,DWORD PTR [esp]
 95c:	c3                   	ret    
 95d:	66 90                	xchg   ax,ax
 95f:	90                   	nop

00000960 <test>:
 960:	55                   	push   ebp
 961:	89 e5                	mov    ebp,esp
 963:	83 ec 10             	sub    esp,0x10
 966:	6a 00                	push   0x0
 968:	89 e2                	mov    edx,esp
 96a:	e8 fc ff ff ff       	call   96b <test+0xb>
 96f:	29 d4                	sub    esp,edx
 971:	50                   	push   eax
 972:	68 90 01 00 00       	push   0x190
 977:	68 f4 01 00 00       	push   0x1f4
 97c:	89 e2                	mov    edx,esp
 97e:	e8 fc ff ff ff       	call   97f <test+0x1f>
 983:	29 d4                	sub    esp,edx
 985:	50                   	push   eax
 986:	b8 40 20 00 00       	mov    eax,0x2040
 98b:	50                   	push   eax
 98c:	89 e2                	mov    edx,esp
 98e:	e8 fc ff ff ff       	call   98f <test+0x2f>
 993:	29 d4                	sub    esp,edx
 995:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
 998:	6a 00                	push   0x0
 99a:	6a 00                	push   0x0
 99c:	6a 00                	push   0x0
 99e:	6a 00                	push   0x0
 9a0:	89 e2                	mov    edx,esp
 9a2:	e8 fc ff ff ff       	call   9a3 <test+0x43>
 9a7:	29 d4                	sub    esp,edx
 9a9:	50                   	push   eax
 9aa:	6a 00                	push   0x0
 9ac:	68 90 01 00 00       	push   0x190
 9b1:	6a 00                	push   0x0
 9b3:	68 f4 01 00 00       	push   0x1f4
 9b8:	89 e2                	mov    edx,esp
 9ba:	e8 fc ff ff ff       	call   9bb <test+0x5b>
 9bf:	29 d4                	sub    esp,edx
 9c1:	50                   	push   eax
 9c2:	68 ec 09 00 00       	push   0x9ec
 9c7:	89 e2                	mov    edx,esp
 9c9:	e8 fc ff ff ff       	call   9ca <test+0x6a>
 9ce:	29 d4                	sub    esp,edx
 9d0:	50                   	push   eax
 9d1:	68 fe 09 00 00       	push   0x9fe
 9d6:	89 e2                	mov    edx,esp
 9d8:	e8 fc ff ff ff       	call   9d9 <test+0x79>
 9dd:	29 d4                	sub    esp,edx
 9df:	50                   	push   eax
 9e0:	89 e2                	mov    edx,esp
 9e2:	e8 fc ff ff ff       	call   9e3 <test+0x83>
 9e7:	29 d4                	sub    esp,edx
 9e9:	50                   	push   eax
 9ea:	c9                   	leave  
 9eb:	c3                   	ret    

000009ec <display>:
 9ec:	55                   	push   ebp
 9ed:	89 e5                	mov    ebp,esp
 9ef:	83 ec 10             	sub    esp,0x10
 9f2:	89 e2                	mov    edx,esp
 9f4:	e8 fc ff ff ff       	call   9f5 <display+0x9>
 9f9:	29 d4                	sub    esp,edx
 9fb:	50                   	push   eax
 9fc:	c9                   	leave  
 9fd:	c3                   	ret    

000009fe <key>:
 9fe:	55                   	push   ebp
 9ff:	89 e5                	mov    ebp,esp
 a01:	83 ec 10             	sub    esp,0x10
 a04:	c9                   	leave  
 a05:	c3                   	ret    
 a06:	66 90                	xchg   ax,ax
 a08:	66 90                	xchg   ax,ax
 a0a:	66 90                	xchg   ax,ax
 a0c:	66 90                	xchg   ax,ax
 a0e:	66 90                	xchg   ax,ax

00000a10 <__libc_csu_init>:
 a10:	55                   	push   ebp
 a11:	57                   	push   edi
 a12:	56                   	push   esi
 a13:	53                   	push   ebx
 a14:	e8 27 fd ff ff       	call   740 <__x86.get_pc_thunk.bx>
 a19:	81 c3 e7 15 00 00    	add    ebx,0x15e7
 a1f:	83 ec 0c             	sub    esp,0xc
 a22:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
 a26:	8d b3 d8 fe ff ff    	lea    esi,[ebx-0x128]
 a2c:	e8 db fb ff ff       	call   60c <_init>
 a31:	8d 83 d4 fe ff ff    	lea    eax,[ebx-0x12c]
 a37:	29 c6                	sub    esi,eax
 a39:	c1 fe 02             	sar    esi,0x2
 a3c:	85 f6                	test   esi,esi
 a3e:	74 25                	je     a65 <__libc_csu_init+0x55>
 a40:	31 ff                	xor    edi,edi
 a42:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 a48:	83 ec 04             	sub    esp,0x4
 a4b:	55                   	push   ebp
 a4c:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 a50:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 a54:	ff 94 bb d4 fe ff ff 	call   DWORD PTR [ebx+edi*4-0x12c]
 a5b:	83 c7 01             	add    edi,0x1
 a5e:	83 c4 10             	add    esp,0x10
 a61:	39 fe                	cmp    esi,edi
 a63:	75 e3                	jne    a48 <__libc_csu_init+0x38>
 a65:	83 c4 0c             	add    esp,0xc
 a68:	5b                   	pop    ebx
 a69:	5e                   	pop    esi
 a6a:	5f                   	pop    edi
 a6b:	5d                   	pop    ebp
 a6c:	c3                   	ret    
 a6d:	8d 76 00             	lea    esi,[esi+0x0]

00000a70 <__libc_csu_fini>:
 a70:	f3 c3                	repz ret 

Disassembly of section .fini:

00000a74 <_fini>:
 a74:	53                   	push   ebx
 a75:	83 ec 08             	sub    esp,0x8
 a78:	e8 c3 fc ff ff       	call   740 <__x86.get_pc_thunk.bx>
 a7d:	81 c3 83 15 00 00    	add    ebx,0x1583
 a83:	83 c4 08             	add    esp,0x8
 a86:	5b                   	pop    ebx
 a87:	c3                   	ret    

Disassembly of section .rodata:

00000a88 <_fp_hw>:
 a88:	03 00                	add    eax,DWORD PTR [eax]
	...

00000a8c <_IO_stdin_used>:
 a8c:	01 00                	add    DWORD PTR [eax],eax
 a8e:	02 00                	add    al,BYTE PTR [eax]
 a90:	54                   	push   esp
 a91:	72 69                	jb     afc <__GNU_EH_FRAME_HDR+0x4c>
 a93:	61                   	popa   
 a94:	6e                   	outs   dx,BYTE PTR ds:[esi]
 a95:	67 6c                	ins    BYTE PTR es:[di],dx
 a97:	65 00 00             	add    BYTE PTR gs:[eax],al
	...
 aa2:	00 00                	add    BYTE PTR [eax],al
 aa4:	00 40 7f             	add    BYTE PTR [eax+0x7f],al
 aa7:	40                   	inc    eax
 aa8:	00 00                	add    BYTE PTR [eax],al
 aaa:	00 00                	add    BYTE PTR [eax],al
 aac:	00 00                	add    BYTE PTR [eax],al
 aae:	79 40                	jns    af0 <__GNU_EH_FRAME_HDR+0x40>

Disassembly of section .eh_frame_hdr:

00000ab0 <__GNU_EH_FRAME_HDR>:
 ab0:	01 1b                	add    DWORD PTR [ebx],ebx
 ab2:	03 3b                	add    edi,DWORD PTR [ebx]
 ab4:	40                   	inc    eax
 ab5:	00 00                	add    BYTE PTR [eax],al
 ab7:	00 07                	add    BYTE PTR [edi],al
 ab9:	00 00                	add    BYTE PTR [eax],al
 abb:	00 80 fb ff ff 5c    	add    BYTE PTR [eax+0x5cfffffb],al
 ac1:	00 00                	add    BYTE PTR [eax],al
 ac3:	00 40 fc             	add    BYTE PTR [eax-0x4],al
 ac6:	ff                   	(bad)  
 ac7:	ff 80 00 00 00 8d    	inc    DWORD PTR [eax-0x73000000]
 acd:	fd                   	std    
 ace:	ff                   	(bad)  
 acf:	ff 94 00 00 00 ac fd 	call   DWORD PTR [eax+eax*1-0x2540000]
 ad6:	ff                   	(bad)  
 ad7:	ff                   	(bad)  
 ad8:	b8 00 00 00 a9       	mov    eax,0xa9000000
 add:	fe                   	(bad)  
 ade:	ff                   	(bad)  
 adf:	ff                   	(bad)  
 ae0:	ec                   	in     al,dx
 ae1:	00 00                	add    BYTE PTR [eax],al
 ae3:	00 60 ff             	add    BYTE PTR [eax-0x1],ah
 ae6:	ff                   	(bad)  
 ae7:	ff 00                	inc    DWORD PTR [eax]
 ae9:	01 00                	add    DWORD PTR [eax],eax
 aeb:	00 c0                	add    al,al
 aed:	ff                   	(bad)  
 aee:	ff                   	(bad)  
 aef:	ff 4c 01 00          	dec    DWORD PTR [ecx+eax*1+0x0]
	...

Disassembly of section .eh_frame:

00000af4 <__FRAME_END__-0x11c>:
 af4:	14 00                	adc    al,0x0
 af6:	00 00                	add    BYTE PTR [eax],al
 af8:	00 00                	add    BYTE PTR [eax],al
 afa:	00 00                	add    BYTE PTR [eax],al
 afc:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 aff:	00 01                	add    BYTE PTR [ecx],al
 b01:	7c 08                	jl     b0b <__GNU_EH_FRAME_HDR+0x5b>
 b03:	01 1b                	add    DWORD PTR [ebx],ebx
 b05:	0c 04                	or     al,0x4
 b07:	04 88                	add    al,0x88
 b09:	01 00                	add    DWORD PTR [eax],eax
 b0b:	00 20                	add    BYTE PTR [eax],ah
 b0d:	00 00                	add    BYTE PTR [eax],al
 b0f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 b12:	00 00                	add    BYTE PTR [eax],al
 b14:	1c fb                	sbb    al,0xfb
 b16:	ff                   	(bad)  
 b17:	ff c0                	inc    eax
 b19:	00 00                	add    BYTE PTR [eax],al
 b1b:	00 00                	add    BYTE PTR [eax],al
 b1d:	0e                   	push   cs
 b1e:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 b21:	0c 4a                	or     al,0x4a
 b23:	0f 0b                	ud2    
 b25:	74 04                	je     b2b <__GNU_EH_FRAME_HDR+0x7b>
 b27:	78 00                	js     b29 <__GNU_EH_FRAME_HDR+0x79>
 b29:	3f                   	aas    
 b2a:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 b2c:	2a 32                	sub    dh,BYTE PTR [edx]
 b2e:	24 22                	and    al,0x22
 b30:	10 00                	adc    BYTE PTR [eax],al
 b32:	00 00                	add    BYTE PTR [eax],al
 b34:	40                   	inc    eax
 b35:	00 00                	add    BYTE PTR [eax],al
 b37:	00 b8 fb ff ff 08    	add    BYTE PTR [eax+0x8fffffb],bh
 b3d:	00 00                	add    BYTE PTR [eax],al
 b3f:	00 00                	add    BYTE PTR [eax],al
 b41:	00 00                	add    BYTE PTR [eax],al
 b43:	00 20                	add    BYTE PTR [eax],ah
 b45:	00 00                	add    BYTE PTR [eax],al
 b47:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
 b4b:	00 f1                	add    cl,dh
 b4d:	fc                   	cld    
 b4e:	ff                   	(bad)  
 b4f:	ff 1f                	call   FWORD PTR [edi]
 b51:	00 00                	add    BYTE PTR [eax],al
 b53:	00 00                	add    BYTE PTR [eax],al
 b55:	41                   	inc    ecx
 b56:	0e                   	push   cs
 b57:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 b5d:	44                   	inc    esp
 b5e:	83 03 56             	add    DWORD PTR [ebx],0x56
 b61:	c3                   	ret    
 b62:	41                   	inc    ecx
 b63:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 b66:	04 00                	add    al,0x0
 b68:	30 00                	xor    BYTE PTR [eax],al
 b6a:	00 00                	add    BYTE PTR [eax],al
 b6c:	78 00                	js     b6e <__GNU_EH_FRAME_HDR+0xbe>
 b6e:	00 00                	add    BYTE PTR [eax],al
 b70:	ec                   	in     al,dx
 b71:	fc                   	cld    
 b72:	ff                   	(bad)  
 b73:	ff                   	(bad)  
 b74:	fd                   	std    
 b75:	00 00                	add    BYTE PTR [eax],al
 b77:	00 00                	add    BYTE PTR [eax],al
 b79:	44                   	inc    esp
 b7a:	0c 01                	or     al,0x1
 b7c:	00 47 10             	add    BYTE PTR [edi+0x10],al
 b7f:	05 02 75 00 44       	add    eax,0x44007502
 b84:	0f 03 75 78          	lsl    esi,WORD PTR [ebp+0x78]
 b88:	06                   	push   es
 b89:	10 03                	adc    BYTE PTR [ebx],al
 b8b:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
 b8e:	02 e8                	add    ch,al
 b90:	c1 0c 01 00          	ror    DWORD PTR [ecx+eax*1],0x0
 b94:	41                   	inc    ecx
 b95:	c3                   	ret    
 b96:	41                   	inc    ecx
 b97:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
 b9a:	04 04                	add    al,0x4
 b9c:	10 00                	adc    BYTE PTR [eax],al
 b9e:	00 00                	add    BYTE PTR [eax],al
 ba0:	ac                   	lods   al,BYTE PTR ds:[esi]
 ba1:	00 00                	add    BYTE PTR [eax],al
 ba3:	00 b5 fd ff ff 04    	add    BYTE PTR [ebp+0x4fffffd],dh
 ba9:	00 00                	add    BYTE PTR [eax],al
 bab:	00 00                	add    BYTE PTR [eax],al
 bad:	00 00                	add    BYTE PTR [eax],al
 baf:	00 48 00             	add    BYTE PTR [eax+0x0],cl
 bb2:	00 00                	add    BYTE PTR [eax],al
 bb4:	c0 00 00             	rol    BYTE PTR [eax],0x0
 bb7:	00 58 fe             	add    BYTE PTR [eax-0x2],bl
 bba:	ff                   	(bad)  
 bbb:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 bbe:	00 00                	add    BYTE PTR [eax],al
 bc0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 bc3:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 bc9:	87 03                	xchg   DWORD PTR [ebx],eax
 bcb:	41                   	inc    ecx
 bcc:	0e                   	push   cs
 bcd:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 bd3:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
 bda:	24 41                	and    al,0x41
 bdc:	0e                   	push   cs
 bdd:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 be1:	44                   	inc    esp
 be2:	0e                   	push   cs
 be3:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 be6:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 be9:	14 41                	adc    al,0x41
 beb:	c3                   	ret    
 bec:	0e                   	push   cs
 bed:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 bf0:	0e                   	push   cs
 bf1:	0c 41                	or     al,0x41
 bf3:	c7                   	(bad)  
 bf4:	0e                   	push   cs
 bf5:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 bf8:	0e                   	push   cs
 bf9:	04 00                	add    al,0x0
 bfb:	00 10                	add    BYTE PTR [eax],dl
 bfd:	00 00                	add    BYTE PTR [eax],al
 bff:	00 0c 01             	add    BYTE PTR [ecx+eax*1],cl
 c02:	00 00                	add    BYTE PTR [eax],al
 c04:	6c                   	ins    BYTE PTR es:[edi],dx
 c05:	fe                   	(bad)  
 c06:	ff                   	(bad)  
 c07:	ff 02                	inc    DWORD PTR [edx]
 c09:	00 00                	add    BYTE PTR [eax],al
 c0b:	00 00                	add    BYTE PTR [eax],al
 c0d:	00 00                	add    BYTE PTR [eax],al
	...

00000c10 <__FRAME_END__>:
 c10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

00001ed4 <__frame_dummy_init_array_entry>:
    1ed4:	30 08                	xor    BYTE PTR [eax],cl
	...

Disassembly of section .fini_array:

00001ed8 <__do_global_dtors_aux_fini_array_entry>:
    1ed8:	e0 07                	loopne 1ee1 <_DYNAMIC+0x5>
	...

Disassembly of section .dynamic:

00001edc <_DYNAMIC>:
    1edc:	01 00                	add    DWORD PTR [eax],eax
    1ede:	00 00                	add    BYTE PTR [eax],al
    1ee0:	01 00                	add    DWORD PTR [eax],eax
    1ee2:	00 00                	add    BYTE PTR [eax],al
    1ee4:	01 00                	add    DWORD PTR [eax],eax
    1ee6:	00 00                	add    BYTE PTR [eax],al
    1ee8:	5d                   	pop    ebp
    1ee9:	00 00                	add    BYTE PTR [eax],al
    1eeb:	00 01                	add    BYTE PTR [ecx],al
    1eed:	00 00                	add    BYTE PTR [eax],al
    1eef:	00 69 00             	add    BYTE PTR [ecx+0x0],ch
    1ef2:	00 00                	add    BYTE PTR [eax],al
    1ef4:	01 00                	add    DWORD PTR [eax],eax
    1ef6:	00 00                	add    BYTE PTR [eax],al
    1ef8:	05 01 00 00 0c       	add    eax,0xc000001
    1efd:	00 00                	add    BYTE PTR [eax],al
    1eff:	00 0c 06             	add    BYTE PTR [esi+eax*1],cl
    1f02:	00 00                	add    BYTE PTR [eax],al
    1f04:	0d 00 00 00 74       	or     eax,0x74000000
    1f09:	0a 00                	or     al,BYTE PTR [eax]
    1f0b:	00 19                	add    BYTE PTR [ecx],bl
    1f0d:	00 00                	add    BYTE PTR [eax],al
    1f0f:	00 d4                	add    ah,dl
    1f11:	1e                   	push   ds
    1f12:	00 00                	add    BYTE PTR [eax],al
    1f14:	1b 00                	sbb    eax,DWORD PTR [eax]
    1f16:	00 00                	add    BYTE PTR [eax],al
    1f18:	04 00                	add    al,0x0
    1f1a:	00 00                	add    BYTE PTR [eax],al
    1f1c:	1a 00                	sbb    al,BYTE PTR [eax]
    1f1e:	00 00                	add    BYTE PTR [eax],al
    1f20:	d8 1e                	fcomp  DWORD PTR [esi]
    1f22:	00 00                	add    BYTE PTR [eax],al
    1f24:	1c 00                	sbb    al,0x0
    1f26:	00 00                	add    BYTE PTR [eax],al
    1f28:	04 00                	add    al,0x0
    1f2a:	00 00                	add    BYTE PTR [eax],al
    1f2c:	f5                   	cmc    
    1f2d:	fe                   	(bad)  
    1f2e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
    1f31:	01 00                	add    DWORD PTR [eax],eax
    1f33:	00 05 00 00 00 48    	add    BYTE PTR ds:0x48000000,al
    1f39:	03 00                	add    eax,DWORD PTR [eax]
    1f3b:	00 06                	add    BYTE PTR [esi],al
    1f3d:	00 00                	add    BYTE PTR [eax],al
    1f3f:	00 e8                	add    al,ch
    1f41:	01 00                	add    DWORD PTR [eax],eax
    1f43:	00 0a                	add    BYTE PTR [edx],cl
    1f45:	00 00                	add    BYTE PTR [eax],al
    1f47:	00 6d 01             	add    BYTE PTR [ebp+0x1],ch
    1f4a:	00 00                	add    BYTE PTR [eax],al
    1f4c:	0b 00                	or     eax,DWORD PTR [eax]
    1f4e:	00 00                	add    BYTE PTR [eax],al
    1f50:	10 00                	adc    BYTE PTR [eax],al
    1f52:	00 00                	add    BYTE PTR [eax],al
    1f54:	15 00 00 00 00       	adc    eax,0x0
    1f59:	00 00                	add    BYTE PTR [eax],al
    1f5b:	00 03                	add    BYTE PTR [ebx],al
    1f5d:	00 00                	add    BYTE PTR [eax],al
    1f5f:	00 00                	add    BYTE PTR [eax],al
    1f61:	20 00                	and    BYTE PTR [eax],al
    1f63:	00 02                	add    BYTE PTR [edx],al
    1f65:	00 00                	add    BYTE PTR [eax],al
    1f67:	00 58 00             	add    BYTE PTR [eax+0x0],bl
    1f6a:	00 00                	add    BYTE PTR [eax],al
    1f6c:	14 00                	adc    al,0x0
    1f6e:	00 00                	add    BYTE PTR [eax],al
    1f70:	11 00                	adc    DWORD PTR [eax],eax
    1f72:	00 00                	add    BYTE PTR [eax],al
    1f74:	17                   	pop    ss
    1f75:	00 00                	add    BYTE PTR [eax],al
    1f77:	00 b4 05 00 00 11 00 	add    BYTE PTR [ebp+eax*1+0x110000],dh
    1f7e:	00 00                	add    BYTE PTR [eax],al
    1f80:	14 05                	adc    al,0x5
    1f82:	00 00                	add    BYTE PTR [eax],al
    1f84:	12 00                	adc    al,BYTE PTR [eax]
    1f86:	00 00                	add    BYTE PTR [eax],al
    1f88:	a0 00 00 00 13       	mov    al,ds:0x13000000
    1f8d:	00 00                	add    BYTE PTR [eax],al
    1f8f:	00 08                	add    BYTE PTR [eax],cl
    1f91:	00 00                	add    BYTE PTR [eax],al
    1f93:	00 16                	add    BYTE PTR [esi],dl
    1f95:	00 00                	add    BYTE PTR [eax],al
    1f97:	00 00                	add    BYTE PTR [eax],al
    1f99:	00 00                	add    BYTE PTR [eax],al
    1f9b:	00 fb                	add    bl,bh
    1f9d:	ff                   	(bad)  
    1f9e:	ff 6f 00             	jmp    FWORD PTR [edi+0x0]
    1fa1:	00 00                	add    BYTE PTR [eax],al
    1fa3:	08 fe                	or     dh,bh
    1fa5:	ff                   	(bad)  
    1fa6:	ff 6f e4             	jmp    FWORD PTR [edi-0x1c]
    1fa9:	04 00                	add    al,0x0
    1fab:	00 ff                	add    bh,bh
    1fad:	ff                   	(bad)  
    1fae:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    1fb1:	00 00                	add    BYTE PTR [eax],al
    1fb3:	00 f0                	add    al,dh
    1fb5:	ff                   	(bad)  
    1fb6:	ff 6f b6             	jmp    FWORD PTR [edi-0x4a]
    1fb9:	04 00                	add    al,0x0
    1fbb:	00 fa                	add    dl,bh
    1fbd:	ff                   	(bad)  
    1fbe:	ff 6f 07             	jmp    FWORD PTR [edi+0x7]
	...

Disassembly of section .got:

00001fec <.got>:
    1fec:	00 00                	add    BYTE PTR [eax],al
    1fee:	00 00                	add    BYTE PTR [eax],al
    1ff0:	5c                   	pop    esp
    1ff1:	08 00                	or     BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

00002000 <_GLOBAL_OFFSET_TABLE_>:
    2000:	dc 1e                	fcomp  QWORD PTR [esi]
	...
    200a:	00 00                	add    BYTE PTR [eax],al
    200c:	46                   	inc    esi
    200d:	06                   	push   es
    200e:	00 00                	add    BYTE PTR [eax],al
    2010:	56                   	push   esi
    2011:	06                   	push   es
    2012:	00 00                	add    BYTE PTR [eax],al
    2014:	66 06                	pushw  es
    2016:	00 00                	add    BYTE PTR [eax],al
    2018:	76 06                	jbe    2020 <_GLOBAL_OFFSET_TABLE_+0x20>
    201a:	00 00                	add    BYTE PTR [eax],al
    201c:	86 06                	xchg   BYTE PTR [esi],al
    201e:	00 00                	add    BYTE PTR [eax],al
    2020:	96                   	xchg   esi,eax
    2021:	06                   	push   es
    2022:	00 00                	add    BYTE PTR [eax],al
    2024:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
    2025:	06                   	push   es
    2026:	00 00                	add    BYTE PTR [eax],al
    2028:	b6 06                	mov    dh,0x6
    202a:	00 00                	add    BYTE PTR [eax],al
    202c:	c6 06 00             	mov    BYTE PTR [esi],0x0
    202f:	00 d6                	add    dh,dl
    2031:	06                   	push   es
    2032:	00 00                	add    BYTE PTR [eax],al
    2034:	e6 06                	out    0x6,al
	...

Disassembly of section .data:

00002038 <__data_start>:
    2038:	00 00                	add    BYTE PTR [eax],al
	...

0000203c <__dso_handle>:
    203c:	3c 20                	cmp    al,0x20
	...

00002040 <str1>:
    2040:	54                   	push   esp
    2041:	72 69                	jb     20ac <__TMC_END__+0x60>
    2043:	61                   	popa   
    2044:	6e                   	outs   dx,BYTE PTR ds:[esi]
    2045:	67 6c                	ins    BYTE PTR es:[di],dx
    2047:	65                   	gs
	...

Disassembly of section .bss:

00002049 <__bss_start>:
    2049:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   8:	55                   	push   ebp
   9:	29 20                	sub    DWORD PTR [eax],esp
   b:	37                   	aaa    
   c:	2e 32 2e             	xor    ch,BYTE PTR cs:[esi]
   f:	31 20                	xor    DWORD PTR [eax],esp
  11:	32 30                	xor    dh,BYTE PTR [eax]
  13:	31 37                	xor    DWORD PTR [edi],esi
  15:	31 32                	xor    DWORD PTR [edx],esi
  17:	32 34 00             	xor    dh,BYTE PTR [eax+eax*1]
  1a:	47                   	inc    edi
  1b:	43                   	inc    ebx
  1c:	43                   	inc    ebx
  1d:	3a 20                	cmp    ah,BYTE PTR [eax]
  1f:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
  22:	55                   	push   ebp
  23:	29 20                	sub    DWORD PTR [eax],esp
  25:	37                   	aaa    
  26:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  29:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .GCC.command.line:

00000000 <.GCC.command.line>:
   0:	2d 49 20 2e 00       	sub    eax,0x2e2049
   5:	2d 49 20 2e 2e       	sub    eax,0x2e2e2049
   a:	2f                   	das    
   b:	2e 2e 2f             	cs cs das 
   e:	2e 2e 2f             	cs cs das 
  11:	2e 2f                	cs das 
  13:	67 63 63 00          	arpl   WORD PTR [bp+di+0x0],sp
  17:	2d 49 20 2f 62       	sub    eax,0x622f2049
  1c:	75 69                	jne    87 <_init-0x585>
  1e:	6c                   	ins    BYTE PTR es:[edi],dx
  1f:	64 2f                	fs das 
  21:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  25:	73 72                	jae    99 <_init-0x573>
  27:	63 2f                	arpl   WORD PTR [edi],bp
  29:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  2d:	6c                   	ins    BYTE PTR es:[edi],dx
  2e:	69 62 67 63 63 00 2d 	imul   esp,DWORD PTR [edx+0x67],0x2d006363
  35:	49                   	dec    ecx
  36:	20 2f                	and    BYTE PTR [edi],ch
  38:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  3b:	6c                   	ins    BYTE PTR es:[edi],dx
  3c:	64 2f                	fs das 
  3e:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  42:	73 72                	jae    b6 <_init-0x556>
  44:	63 2f                	arpl   WORD PTR [edi],bp
  46:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  4a:	6c                   	ins    BYTE PTR es:[edi],dx
  4b:	69 62 67 63 63 2f 2e 	imul   esp,DWORD PTR [edx+0x67],0x2e2f6363
  52:	00 2d 49 20 2f 62    	add    BYTE PTR ds:0x622f2049,ch
  58:	75 69                	jne    c3 <_init-0x549>
  5a:	6c                   	ins    BYTE PTR es:[edi],dx
  5b:	64 2f                	fs das 
  5d:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  61:	73 72                	jae    d5 <_init-0x537>
  63:	63 2f                	arpl   WORD PTR [edi],bp
  65:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  69:	6c                   	ins    BYTE PTR es:[edi],dx
  6a:	69 62 67 63 63 2f 2e 	imul   esp,DWORD PTR [edx+0x67],0x2e2f6363
  71:	2e 2f                	cs das 
  73:	67 63 63 00          	arpl   WORD PTR [bp+di+0x0],sp
  77:	2d 49 20 2f 62       	sub    eax,0x622f2049
  7c:	75 69                	jne    e7 <_init-0x525>
  7e:	6c                   	ins    BYTE PTR es:[edi],dx
  7f:	64 2f                	fs das 
  81:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  85:	73 72                	jae    f9 <_init-0x513>
  87:	63 2f                	arpl   WORD PTR [edi],bp
  89:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  8d:	6c                   	ins    BYTE PTR es:[edi],dx
  8e:	69 62 67 63 63 2f 2e 	imul   esp,DWORD PTR [edx+0x67],0x2e2f6363
  95:	2e 2f                	cs das 
  97:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  9e:	00 2d 49 20 2f 62    	add    BYTE PTR ds:0x622f2049,ch
  a4:	75 69                	jne    10f <_init-0x4fd>
  a6:	6c                   	ins    BYTE PTR es:[edi],dx
  a7:	64 2f                	fs das 
  a9:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  ad:	73 72                	jae    121 <_init-0x4eb>
  af:	63 2f                	arpl   WORD PTR [edi],bp
  b1:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  b5:	6c                   	ins    BYTE PTR es:[edi],dx
  b6:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [edx+0x67],0x632f6363
  bd:	6f                   	outs   dx,DWORD PTR ds:[esi]
  be:	6e                   	outs   dx,BYTE PTR ds:[esi]
  bf:	66 69 67 2f 6c 69    	imul   sp,WORD PTR [edi+0x2f],0x696c
  c5:	62 62 69             	bound  esp,QWORD PTR [edx+0x69]
  c8:	64 00 2d 69 6d 75 6c 	add    BYTE PTR fs:0x6c756d69,ch
  cf:	74 69                	je     13a <_init-0x4d2>
  d1:	6c                   	ins    BYTE PTR es:[edi],dx
  d2:	69 62 20 33 32 00 2d 	imul   esp,DWORD PTR [edx+0x20],0x2d003233
  d9:	69 70 72 65 66 69 78 	imul   esi,DWORD PTR [eax+0x72],0x78696665
  e0:	20 2f                	and    BYTE PTR [edi],ch
  e2:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  e5:	6c                   	ins    BYTE PTR es:[edi],dx
  e6:	64 2f                	fs das 
  e8:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  ec:	73 72                	jae    160 <_init-0x4ac>
  ee:	63 2f                	arpl   WORD PTR [edi],bp
  f0:	67 63 63 2d          	arpl   WORD PTR [bp+di+0x2d],sp
  f4:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  f7:	6c                   	ins    BYTE PTR es:[edi],dx
  f8:	64 2f                	fs das 
  fa:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
  fe:	2e 2e 2f             	cs cs das 
 101:	6c                   	ins    BYTE PTR es:[edi],dx
 102:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [edx+0x2f],0x2f636367
 109:	78 38                	js     143 <_init-0x4c9>
 10b:	36 5f                	ss pop edi
 10d:	36 34 2d             	ss xor al,0x2d
 110:	70 63                	jo     175 <_init-0x497>
 112:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 117:	78 2d                	js     146 <_init-0x4c6>
 119:	67 6e                	outs   dx,BYTE PTR ds:[si]
 11b:	75 2f                	jne    14c <_init-0x4c0>
 11d:	37                   	aaa    
 11e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
 121:	30 2f                	xor    BYTE PTR [edi],ch
 123:	00 2d 69 73 79 73    	add    BYTE PTR ds:0x73797369,ch
 129:	74 65                	je     190 <_init-0x47c>
 12b:	6d                   	ins    DWORD PTR es:[edi],dx
 12c:	20 2f                	and    BYTE PTR [edi],ch
 12e:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 131:	6c                   	ins    BYTE PTR es:[edi],dx
 132:	64 2f                	fs das 
 134:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
 138:	73 72                	jae    1ac <_init-0x460>
 13a:	63 2f                	arpl   WORD PTR [edi],bp
 13c:	67 63 63 2d          	arpl   WORD PTR [bp+di+0x2d],sp
 140:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 143:	6c                   	ins    BYTE PTR es:[edi],dx
 144:	64 2f                	fs das 
 146:	2e 2f                	cs das 
 148:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
 14c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 153:	00 2d 69 73 79 73    	add    BYTE PTR ds:0x73797369,ch
 159:	74 65                	je     1c0 <_init-0x44c>
 15b:	6d                   	ins    DWORD PTR es:[edi],dx
 15c:	20 2f                	and    BYTE PTR [edi],ch
 15e:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 161:	6c                   	ins    BYTE PTR es:[edi],dx
 162:	64 2f                	fs das 
 164:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
 168:	73 72                	jae    1dc <_init-0x430>
 16a:	63 2f                	arpl   WORD PTR [edi],bp
 16c:	67 63 63 2d          	arpl   WORD PTR [bp+di+0x2d],sp
 170:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 173:	6c                   	ins    BYTE PTR es:[edi],dx
 174:	64 2f                	fs das 
 176:	2e 2f                	cs das 
 178:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
 17c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 183:	2d 66 69 78 65       	sub    eax,0x65786966
 188:	64 00 2d 4d 44 20 63 	add    BYTE PTR fs:0x6320444d,ch
 18f:	72 74                	jb     205 <_init-0x407>
 191:	62 65 67             	bound  esp,QWORD PTR [ebp+0x67]
 194:	69 6e 53 2e 64 00 2d 	imul   ebp,DWORD PTR [esi+0x53],0x2d00642e
 19b:	4d                   	dec    ebp
 19c:	46                   	inc    esi
 19d:	20 63 72             	and    BYTE PTR [ebx+0x72],ah
 1a0:	74 62                	je     204 <_init-0x408>
 1a2:	65 67 69 6e 53 2e 64 	imul   ebp,DWORD PTR gs:[bp+0x53],0x7065642e
 1a9:	65 70 
 1ab:	00 2d 4d 50 00 2d    	add    BYTE PTR ds:0x2d00504d,ch
 1b1:	4d                   	dec    ebp
 1b2:	54                   	push   esp
 1b3:	20 63 72             	and    BYTE PTR [ebx+0x72],ah
 1b6:	74 62                	je     21a <_init-0x3f2>
 1b8:	65 67 69 6e 53 2e 6f 	imul   ebp,DWORD PTR gs:[bp+0x53],0x2d006f2e
 1bf:	00 2d 
 1c1:	44                   	inc    esp
 1c2:	20 49 4e             	and    BYTE PTR [ecx+0x4e],cl
 1c5:	5f                   	pop    edi
 1c6:	47                   	inc    edi
 1c7:	43                   	inc    ebx
 1c8:	43                   	inc    ebx
 1c9:	00 2d 44 20 45 4e    	add    BYTE PTR ds:0x4e452044,ch
 1cf:	41                   	inc    ecx
 1d0:	42                   	inc    edx
 1d1:	4c                   	dec    esp
 1d2:	45                   	inc    ebp
 1d3:	5f                   	pop    edi
 1d4:	44                   	inc    esp
 1d5:	45                   	inc    ebp
 1d6:	43                   	inc    ebx
 1d7:	49                   	dec    ecx
 1d8:	4d                   	dec    ebp
 1d9:	41                   	inc    ecx
 1da:	4c                   	dec    esp
 1db:	5f                   	pop    edi
 1dc:	42                   	inc    edx
 1dd:	49                   	dec    ecx
 1de:	44                   	inc    esp
 1df:	5f                   	pop    edi
 1e0:	46                   	inc    esi
 1e1:	4f                   	dec    edi
 1e2:	52                   	push   edx
 1e3:	4d                   	dec    ebp
 1e4:	41                   	inc    ecx
 1e5:	54                   	push   esp
 1e6:	00 2d 44 20 43 52    	add    BYTE PTR ds:0x52432044,ch
 1ec:	54                   	push   esp
 1ed:	5f                   	pop    edi
 1ee:	42                   	inc    edx
 1ef:	45                   	inc    ebp
 1f0:	47                   	inc    edi
 1f1:	49                   	dec    ecx
 1f2:	4e                   	dec    esi
 1f3:	00 2d 44 20 43 52    	add    BYTE PTR ds:0x52432044,ch
 1f9:	54                   	push   esp
 1fa:	53                   	push   ebx
 1fb:	54                   	push   esp
 1fc:	55                   	push   ebp
 1fd:	46                   	inc    esi
 1fe:	46                   	inc    esi
 1ff:	53                   	push   ebx
 200:	5f                   	pop    edi
 201:	4f                   	dec    edi
 202:	00 2d 69 73 79 73    	add    BYTE PTR ds:0x73797369,ch
 208:	74 65                	je     26f <_init-0x39d>
 20a:	6d                   	ins    DWORD PTR es:[edi],dx
 20b:	20 2f                	and    BYTE PTR [edi],ch
 20d:	75 73                	jne    282 <_init-0x38a>
 20f:	72 2f                	jb     240 <_init-0x3cc>
 211:	78 38                	js     24b <_init-0x3c1>
 213:	36 5f                	ss pop edi
 215:	36 34 2d             	ss xor al,0x2d
 218:	70 63                	jo     27d <_init-0x38f>
 21a:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 21f:	78 2d                	js     24e <_init-0x3be>
 221:	67 6e                	outs   dx,BYTE PTR ds:[si]
 223:	75 2f                	jne    254 <_init-0x3b8>
 225:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 22c:	00 2d 69 73 79 73    	add    BYTE PTR ds:0x73797369,ch
 232:	74 65                	je     299 <_init-0x373>
 234:	6d                   	ins    DWORD PTR es:[edi],dx
 235:	20 2f                	and    BYTE PTR [edi],ch
 237:	75 73                	jne    2ac <_init-0x360>
 239:	72 2f                	jb     26a <_init-0x3a2>
 23b:	78 38                	js     275 <_init-0x397>
 23d:	36 5f                	ss pop edi
 23f:	36 34 2d             	ss xor al,0x2d
 242:	70 63                	jo     2a7 <_init-0x365>
 244:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 249:	78 2d                	js     278 <_init-0x394>
 24b:	67 6e                	outs   dx,BYTE PTR ds:[si]
 24d:	75 2f                	jne    27e <_init-0x38e>
 24f:	73 79                	jae    2ca <_init-0x342>
 251:	73 2d                	jae    280 <_init-0x38c>
 253:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 25a:	00 2d 69 73 79 73    	add    BYTE PTR ds:0x73797369,ch
 260:	74 65                	je     2c7 <_init-0x345>
 262:	6d                   	ins    DWORD PTR es:[edi],dx
 263:	20 2e                	and    BYTE PTR [esi],ch
 265:	2f                   	das    
 266:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 26d:	00 2f                	add    BYTE PTR [edi],ch
 26f:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 272:	6c                   	ins    BYTE PTR es:[edi],dx
 273:	64 2f                	fs das 
 275:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
 279:	73 72                	jae    2ed <_init-0x31f>
 27b:	63 2f                	arpl   WORD PTR [edi],bp
 27d:	67 63 63 2f          	arpl   WORD PTR [bp+di+0x2f],sp
 281:	6c                   	ins    BYTE PTR es:[edi],dx
 282:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [edx+0x67],0x632f6363
 289:	72 74                	jb     2ff <_init-0x30d>
 28b:	73 74                	jae    301 <_init-0x30b>
 28d:	75 66                	jne    2f5 <_init-0x317>
 28f:	66 2e 63 00          	data16 arpl WORD PTR cs:[eax],ax
 293:	2d 6d 61 72 63       	sub    eax,0x6372616d
 298:	68 3d 78 38 36       	push   0x3638783d
 29d:	2d 36 34 00 2d       	sub    eax,0x2d003436
 2a2:	6d                   	ins    DWORD PTR es:[edi],dx
 2a3:	74 75                	je     31a <_init-0x2f2>
 2a5:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2a6:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
 2ac:	72 69                	jb     317 <_init-0x2f5>
 2ae:	63 00                	arpl   WORD PTR [eax],ax
 2b0:	2d 6d 33 32 00       	sub    eax,0x32336d
 2b5:	2d 61 75 78 62       	sub    eax,0x62787561
 2ba:	61                   	popa   
 2bb:	73 65                	jae    322 <_init-0x2ea>
 2bd:	2d 73 74 72 69       	sub    eax,0x69727473
 2c2:	70 20                	jo     2e4 <_init-0x328>
 2c4:	63 72 74             	arpl   WORD PTR [edx+0x74],si
 2c7:	62 65 67             	bound  esp,QWORD PTR [ebp+0x67]
 2ca:	69 6e 53 2e 6f 00 2d 	imul   ebp,DWORD PTR [esi+0x53],0x2d006f2e
 2d1:	67 00 2d             	add    BYTE PTR [di],ch
 2d4:	67 30 00             	xor    BYTE PTR [bx+si],al
 2d7:	2d 4f 32 00 2d       	sub    eax,0x2d00324f
 2dc:	57                   	push   edi
 2dd:	65 78 74             	gs js  354 <_init-0x2b8>
 2e0:	72 61                	jb     343 <_init-0x2c9>
 2e2:	00 2d 57 61 6c 6c    	add    BYTE PTR ds:0x6c6c6157,ch
 2e8:	00 2d 57 6e 6f 2d    	add    BYTE PTR ds:0x2d6f6e57,ch
 2ee:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2ef:	61                   	popa   
 2f0:	72 72                	jb     364 <_init-0x2a8>
 2f2:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2f3:	77 69                	ja     35e <_init-0x2ae>
 2f5:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2f6:	67 00 2d             	add    BYTE PTR [di],ch
 2f9:	57                   	push   edi
 2fa:	77 72                	ja     36e <_init-0x29e>
 2fc:	69 74 65 2d 73 74 72 	imul   esi,DWORD PTR [ebp+eiz*2+0x2d],0x69727473
 303:	69 
 304:	6e                   	outs   dx,BYTE PTR ds:[esi]
 305:	67 73 00             	addr16 jae 308 <_init-0x304>
 308:	2d 57 63 61 73       	sub    eax,0x73616357
 30d:	74 2d                	je     33c <_init-0x2d0>
 30f:	71 75                	jno    386 <_init-0x286>
 311:	61                   	popa   
 312:	6c                   	ins    BYTE PTR es:[edi],dx
 313:	00 2d 57 73 74 72    	add    BYTE PTR ds:0x72747357,ch
 319:	69 63 74 2d 70 72 6f 	imul   esp,DWORD PTR [ebx+0x74],0x6f72702d
 320:	74 6f                	je     391 <_init-0x27b>
 322:	74 79                	je     39d <_init-0x26f>
 324:	70 65                	jo     38b <_init-0x281>
 326:	73 00                	jae    328 <_init-0x2e4>
 328:	2d 57 6d 69 73       	sub    eax,0x73696d57
 32d:	73 69                	jae    398 <_init-0x274>
 32f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 330:	67 2d 70 72 6f 74    	addr16 sub eax,0x746f7270
 336:	6f                   	outs   dx,DWORD PTR ds:[esi]
 337:	74 79                	je     3b2 <_init-0x25a>
 339:	70 65                	jo     3a0 <_init-0x26c>
 33b:	73 00                	jae    33d <_init-0x2cf>
 33d:	2d 57 6f 6c 64       	sub    eax,0x646c6f57
 342:	2d 73 74 79 6c       	sub    eax,0x6c797473
 347:	65 2d 64 65 66 69    	gs sub eax,0x69666564
 34d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 34e:	69 74 69 6f 6e 00 2d 	imul   esi,DWORD PTR [ecx+ebp*2+0x6f],0x662d006e
 355:	66 
 356:	73 74                	jae    3cc <_init-0x240>
 358:	61                   	popa   
 359:	63 6b 2d             	arpl   WORD PTR [ebx+0x2d],bp
 35c:	70 72                	jo     3d0 <_init-0x23c>
 35e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 35f:	74 65                	je     3c6 <_init-0x246>
 361:	63 74 6f 72          	arpl   WORD PTR [edi+ebp*2+0x72],si
 365:	2d 73 74 72 6f       	sub    eax,0x6f727473
 36a:	6e                   	outs   dx,BYTE PTR ds:[esi]
 36b:	67 00 2d             	add    BYTE PTR [di],ch
 36e:	66 6e                	data16 outs dx,BYTE PTR ds:[esi]
 370:	6f                   	outs   dx,DWORD PTR ds:[esi]
 371:	2d 70 6c 74 00       	sub    eax,0x746c70
 376:	2d 66 72 65 63       	sub    eax,0x63657266
 37b:	6f                   	outs   dx,DWORD PTR ds:[esi]
 37c:	72 64                	jb     3e2 <_init-0x22a>
 37e:	2d 67 63 63 2d       	sub    eax,0x2d636367
 383:	73 77                	jae    3fc <_init-0x210>
 385:	69 74 63 68 65 73 00 	imul   esi,DWORD PTR [ebx+eiz*2+0x68],0x2d007365
 38c:	2d 
 38d:	66 69 6e 68 69 62    	imul   bp,WORD PTR [esi+0x68],0x6269
 393:	69 74 2d 73 69 7a 65 	imul   esi,DWORD PTR [ebp+ebp*1+0x73],0x2d657a69
 39a:	2d 
 39b:	64 69 72 65 63 74 69 	imul   esi,DWORD PTR fs:[edx+0x65],0x76697463
 3a2:	76 
 3a3:	65 00 2d 66 6e 6f 2d 	add    BYTE PTR gs:0x2d6f6e66,ch
 3aa:	69 6e 6c 69 6e 65 00 	imul   ebp,DWORD PTR [esi+0x6c],0x656e69
 3b1:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
 3b6:	65 78 63             	gs js  41c <_init-0x1f0>
 3b9:	65 70 74             	gs jo  430 <_init-0x1dc>
 3bc:	69 6f 6e 73 00 2d 66 	imul   ebp,DWORD PTR [edi+0x6e],0x662d0073
 3c3:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3c4:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3c5:	2d 7a 65 72 6f       	sub    eax,0x6f72657a
 3ca:	2d 69 6e 69 74       	sub    eax,0x74696e69
 3cf:	69 61 6c 69 7a 65 64 	imul   esp,DWORD PTR [ecx+0x6c],0x64657a69
 3d6:	2d 69 6e 2d 62       	sub    eax,0x622d6e69
 3db:	73 73                	jae    450 <_init-0x1bc>
 3dd:	00 2d 66 6e 6f 2d    	add    BYTE PTR ds:0x2d6f6e66,ch
 3e3:	74 6f                	je     454 <_init-0x1b8>
 3e5:	70 6c                	jo     453 <_init-0x1b9>
 3e7:	65 76 65             	gs jbe 44f <_init-0x1bd>
 3ea:	6c                   	ins    BYTE PTR es:[edi],dx
 3eb:	2d 72 65 6f 72       	sub    eax,0x726f6572
 3f0:	64 65 72 00          	fs gs jb 3f4 <_init-0x218>
 3f4:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
 3f9:	74 72                	je     46d <_init-0x19f>
 3fb:	65 65 2d 76 65 63 74 	gs gs sub eax,0x74636576
 402:	6f                   	outs   dx,DWORD PTR ds:[esi]
 403:	72 69                	jb     46e <_init-0x19e>
 405:	7a 65                	jp     46c <_init-0x1a0>
 407:	00 2d 66 62 75 69    	add    BYTE PTR ds:0x69756266,ch
 40d:	6c                   	ins    BYTE PTR es:[edi],dx
 40e:	64 69 6e 67 2d 6c 69 	imul   ebp,DWORD PTR fs:[esi+0x67],0x62696c2d
 415:	62 
 416:	67 63 63 00          	arpl   WORD PTR [bp+di+0x0],sp
 41a:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
 41f:	73 74                	jae    495 <_init-0x177>
 421:	61                   	popa   
 422:	63 6b 2d             	arpl   WORD PTR [ebx+0x2d],bp
 425:	70 72                	jo     499 <_init-0x173>
 427:	6f                   	outs   dx,DWORD PTR ds:[esi]
 428:	74 65                	je     48f <_init-0x17d>
 42a:	63 74 6f 72          	arpl   WORD PTR [edi+ebp*2+0x72],si
 42e:	00 2d 66 6e 6f 2d    	add    BYTE PTR ds:0x2d6f6e66,ch
 434:	6f                   	outs   dx,DWORD PTR ds:[esi]
 435:	6d                   	ins    DWORD PTR es:[edi],dx
 436:	69 74 2d 66 72 61 6d 	imul   esi,DWORD PTR [ebp+ebp*1+0x66],0x656d6172
 43d:	65 
 43e:	2d 70 6f 69 6e       	sub    eax,0x6e696f70
 443:	74 65                	je     4aa <_init-0x162>
 445:	72 00                	jb     447 <_init-0x1c5>
 447:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
 44c:	61                   	popa   
 44d:	73 79                	jae    4c8 <_init-0x144>
 44f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 450:	63 68 72             	arpl   WORD PTR [eax+0x72],bp
 453:	6f                   	outs   dx,DWORD PTR ds:[esi]
 454:	6e                   	outs   dx,BYTE PTR ds:[esi]
 455:	6f                   	outs   dx,DWORD PTR ds:[esi]
 456:	75 73                	jne    4cb <_init-0x141>
 458:	2d 75 6e 77 69       	sub    eax,0x69776e75
 45d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 45e:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
 464:	65 73 00             	gs jae 467 <_init-0x1a5>
 467:	2d 66 70 69 63       	sub    eax,0x63697066
 46c:	00 2d 4d 44 20 63    	add    BYTE PTR ds:0x6320444d,ch
 472:	72 74                	jb     4e8 <_init-0x124>
 474:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 476:	64 53                	fs push ebx
 478:	2e 64 00 2d 4d 46 20 	cs add BYTE PTR fs:0x6320464d,ch
 47f:	63 
 480:	72 74                	jb     4f6 <_init-0x116>
 482:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 484:	64 53                	fs push ebx
 486:	2e 64 65 70 00       	cs fs gs jo 48b <_init-0x181>
 48b:	2d 4d 54 20 63       	sub    eax,0x6320544d
 490:	72 74                	jb     506 <_init-0x106>
 492:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 494:	64 53                	fs push ebx
 496:	2e 6f                	outs   dx,DWORD PTR cs:[esi]
 498:	00 2d 44 20 43 52    	add    BYTE PTR ds:0x52432044,ch
 49e:	54                   	push   esp
 49f:	5f                   	pop    edi
 4a0:	45                   	inc    ebp
 4a1:	4e                   	dec    esi
 4a2:	44                   	inc    esp
 4a3:	00 2d 61 75 78 62    	add    BYTE PTR ds:0x62787561,ch
 4a9:	61                   	popa   
 4aa:	73 65                	jae    511 <_init-0xfb>
 4ac:	2d 73 74 72 69       	sub    eax,0x69727473
 4b1:	70 20                	jo     4d3 <_init-0x139>
 4b3:	63 72 74             	arpl   WORD PTR [edx+0x74],si
 4b6:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 4b8:	64 53                	fs push ebx
 4ba:	2e 6f                	outs   dx,DWORD PTR cs:[esi]
	...
